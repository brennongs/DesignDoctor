{"version":3,"sources":["bundle.js","adminCtrl.js","adminService.js","app.js","caseCtrl.js","caseService.js","navCtrl.js"],"names":["angular","module","controller","$scope","$state","adminService","params","getPrinciples","then","r","principles","$","css","sendPost","console","log","before","service","$http","get","objects","data","map","x","push","name","p","imageExtensionB","imageData","split","length","imageExtensionA","after","imageBody","imageName","filename","imageExtension","userEmail","post","config","$urlRouterProvider","$stateProvider","otherwise","state","url","templateUrl","directive","restrict","contoller","link","scope","elem","attrs","bind","changeEvent","reader","FileReader","onload","loadEvent","fileread","target","result","files","ngModel","readAsDataURL","caseService","red","lightGrey","changeColor","type","getCases","cases","filter","specialty","setSingle","id","getSingle","single","forEach","i","principle","slice","toUpperCase","section","$stateParams","on","e","attr"],"mappings":"AAAA;;ACAAA,QAAQC,OAAR,aAA4BC,WAA5B,kDAAmD,UAASC,QAAOC,QAAOC,cAAa;EACrFF,OAAOG,SAAO;;EAEdH,OAAOI,gBAAc,YAAI;IACvBF,aAAaE,gBAAgBC,KAAK,UAACC,GAAI;MACrCN,OAAOO,aAAWD;;;EAGtBN,OAAOI;;;EAGPI,EAAAA,OAASC,IAAT,WAAA;EACAD,EAAAA,UAAYC,IAAZ,WAAA;;;EAGAT,OAAOU,WAAS,UAACP,QAAS;IACxBD,aAAaQ,SAASP;;;EAGxBQ,QAAQC,IAAIZ,OAAOG,OAAOU;;ADI5B;;AAEA,SAAS,mBAAmB,KAAK,EAAE,IAAI,MAAM,QAAQ,MAAM,EAAE,KAAK,IAAI,IAAI,GAAG,OAAO,MAAM,IAAI,SAAS,IAAI,IAAI,QAAQ,KAAK,EAAE,KAAK,KAAK,IAAI,MAAM,OAAO,aAAa,EAAE,OAAO,MAAM,KAAK;;AEzB1LhB,QAAQC,OAAR,aAA4BgB,QAA5B,0BAAmD,UAASC,OAAM;;;EAGhE,KAAKX,gBAAc,YAAI;IACrB,OAAOW,MAAMC,IAAN,mBAA6BX,KAAK,UAACC,GAAI;MAC5C,IAAIW,UAAAA,GAAAA,OAAAA,mBAAYX,EAAEY;MAClB,IAAIX,aAAW;MACfU,QAAQE,IAAI,UAACC,GAAI;QACfb,WAAWc,KAAKD,EAAEE;;MAEpB,OAAOf;;;;;EAKX,KAAKG,WAAS,UAACa,GAAI;IACjBZ,QAAQC,IAAIW;IACZC,kBAAkBD,EAAEV,OAAOY,UAAUC,MAAM,KAAK,GAAGA,MAAM;IACzDF,kBAAkBA,gBAAgBA,gBAAgBG,SAAS;IAC3DC,kBAAkBL,EAAEM,MAAMJ,UAAUC,MAAM,KAAK,GAAGA,MAAM;IACxDE,kBAAkBA,gBAAgBA,gBAAgBD,SAAS;;IAE3DJ,EAAEV,SAAO;MACPiB,WAAWP,EAAEV,OAAOY;MACpBM,WAAWR,EAAEV,OAAOmB;MACpBC,gBAAgBT;MAChBU,WAAAA;;IAEFX,EAAEM,QAAM;MACNC,WAAWP,EAAEM,MAAMJ;MACnBM,WAAWR,EAAEM,MAAMG;MACnBC,gBAAgBL;MAChBM,WAAAA;;;IAGF,OAAOnB,MAAMoB,KAAN,eAAyBZ,GAAGlB,KAAK,UAACC,GAAK;MAC5CK,QAAQC,IAAIN;;;;AF+BlB;;AGnEAT,QAAQC,OAAR,aAA2B,CAAA,cAAesC,gDAAO,UAASC,oBAAoBC,gBAAe;EAC3FD,mBAAmBE,UAAnB;;EAEAD,eAAeE,MAAf,QAA4B;IAC1BC,KAAAA;IACAC,aAAAA;IACA3C,YAAAA;KACCyC,MAJH,SAIiB;IACfC,KAAAA;IACAC,aAAAA;IACA3C,YAAAA;KACCyC,MARH,SAQiB;IACfC,KAAAA;IACAC,aAAAA;IACA3C,YAAAA;;IAGD4C,UAjBH,6BAiBwB,UAASzC,cAAa;EAC5C,OAAO;IACL0C,UAAAA;IACAC,WAAW;IACXC,MAAM,SAAA,KAACC,OAAMC,MAAKC,OAAQ;MACxBD,KAAKE,KAAL,UAAmB,UAACC,aAAc;QAChC,IAAIC,SAAO,IAAIC;QACfD,OAAOE,SAAO,UAACC,WAAY;UACzB,IAAIC,WAASD,UAAUE,OAAOC;cAC1BpC,OAAK0B,KAAK,GAAGW,MAAM,GAAGrC;UAC1B,IAAG2B,MAAMW,YAAN,iBAAgC;YACjCb,MAAM5C,OAAOU,SAAO;cAChBY,WAAW+B;cACbxB,UAAUV;;iBAGT,IAAG2B,MAAMW,YAAN,gBAA+B;YACrCb,MAAM5C,OAAO0B,QAAM;cACfJ,WAAW+B;cACbxB,UAAUV;;;;QAIhB8B,OAAOS,cAAcV,YAAYM,OAAOE,MAAM;;;;;AHwEtD;;AIhHA9D,QAAQC,OAAR,aAA4BC,WAA5B,gDAAmD,UAASC,QAAQ8D,aAAa7D,QAAO;EACtFO,EAAAA,OAASC,IAAT,WAAA;EACAD,EAAAA,OAASC,IAAT,WAAA;;;EAGA,IAAMsD,MAAAA;MACAC,YAAAA;EACNhE,OAAOiE,cAAY,UAACC,MAAO;IACzB,IAAG,CAACA,MAAK;MACP;WAEE;MACF,QAAQA;QACN,KAAK;UACH1D,EAAAA,cAAgBC,IAAhB,QAA2BuD;UAC3BxD,EAAAA,OAASC,IAAT,QAAoBsD;UACpB;;QAEF,KAAK;UACHvD,EAAAA,cAAgBC,IAAhB,QAA2BuD;UAC3BxD,EAAAA,OAASC,IAAT,QAAoBsD;UACpB;;QAEF,KAAK;UACHvD,EAAAA,cAAgBC,IAAhB,QAA2BuD;UAC3BxD,EAAAA,OAASC,IAAT,QAAoBsD;UACpB;;QAEF;UACEvD,EAAAA,aAAeC,IAAf,QAA0BuD;;;;EAIlChE,OAAOiE,YAAYhE,OAAOE,OAAO+D;;;EAIjClE,OAAOmE,WAAS,UAACD,MAAO;IACtBJ,YAAYK,WAAW9D,KAAK,UAACC,GAAI;MAC/BN,OAAOoE,QAAM;MACb,QAAOF;QACL,KAAA;UACElE,OAAOoE,QAAM9D,EAAEY,KAAKmD,OAAO,UAACjD,GAAI;YAC9B,OAAOA,EAAEkD,cAAF;;UAET;;QAEF,KAAA;UACEtE,OAAOoE,QAAM9D,EAAEY,KAAKmD,OAAO,UAACjD,GAAI;YAC9B,OAAOA,EAAEkD,cAAF;;UAET;;QAEF,KAAA;UACEtE,OAAOoE,QAAM9D,EAAEY,KAAKmD,OAAO,UAACjD,GAAI;YAC9B,OAAOA,EAAEkD,cAAF;;UAET;;;;EAIRtE,OAAOmE,SAASlE,OAAOE,OAAO+D;;;EAG9BlE,OAAOuE,YAAU,UAACC,IAAK;IACrBxE,OAAOO,aAAW;IAClBuD,YAAYW,UAAUD,IAAInE,KAAK,UAACC,GAAI;MAClCN,OAAO0E,SAAOpE,EAAEY;MAChBlB,OAAO0E,OAAOnE,WAAWoE,QAAQ,UAACpD,GAAGqD,GAAI;QACvC5E,OAAO0E,OAAOnE,WAAWqE,GAAGC,YAAUtD,EAAEsD,UAAUC,MAAM,GAAE,GAAGC,gBAAcxD,EAAEsD,UAAUC,MAAM;;;;EAInG9E,OAAOgF,UAAQ;;AJkHjB;;AK3LAnF,QAAQC,OAAR,aAA4BgB,QAA5B,yBAAkD,UAASC,OAAM;;;EAG/D,KAAKoD,WAAS,UAACD,MAAO;IACpB,OAAOnD,MAAMC,IAAN;;;;EAIT,KAAKyD,YAAU,UAACD,IAAK;IACnB,OAAOzD,MAAMC,IAAN,oBAA4BwD;;;ALgMvC;;AMzMA3E,QAAQC,OAAR,aAA4BC,WAA5B,gDAAiD,UAASC,QAAOiF,cAAahF,QAAO;EACnFO,EAAAA,OAASC,IAAT,UAAA;EACAD,EAAAA,UAAYC,IAAZ,WAAA;;EAEED,EAAAA,QAAU0E,GAAV,SAAsB,UAACC,GAAI;IACzB3E,EAAAA,SAAWC,IAAX,UAAA,OAA+BA,IAA/B,SAAA;IACAD,EAAAA,QAAUC,IAAV,SAAA,QAA8BA,IAA9B,UAAA,QAAmD2E,KAAnD,OAAA;IACA5E,EAAAA,YAAcC,IAAd,WAAA;;EAEFD,EAAAA,SAAW0E,GAAX,SAAuB,UAACC,GAAI;IAC1B3E,EAAAA,SAAWC,IAAX,SAAA,SAAgCA,IAAhC,UAAA;IACAD,EAAAA,QAAUC,IAAV,SAAA,QAA8BA,IAA9B,UAAA,QAAmD2E,KAAnD,OAAA;IACA5E,EAAAA,YAAcC,IAAd,WAAA;;IAZN","file":"bundle.js","sourcesContent":["\"use strict\";\n\nangular.module(\"DesignDoc\").controller(\"adminCtrl\", function ($scope, $state, adminService) {\n  $scope.params = {};\n  //display principles\n  $scope.getPrinciples = function () {\n    adminService.getPrinciples().then(function (r) {\n      $scope.principles = r;\n    });\n  };\n  $scope.getPrinciples();\n\n  //hide/show nav/footer\n  $(\"nav\").css(\"display\", \"none\");\n  $(\"footer\").css(\"display\", \"none\");\n\n  //encode photos to base64\n  $scope.sendPost = function (params) {\n    adminService.sendPost(params);\n  };\n\n  console.log($scope.params.before);\n});\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('DesignDoc').service('adminService', function ($http) {\n\n  //===display principles===\\\\\n  this.getPrinciples = function () {\n    return $http.get('/api/principles').then(function (r) {\n      var objects = [].concat(_toConsumableArray(r.data));\n      var principles = [];\n      objects.map(function (x) {\n        principles.push(x.name);\n      });\n      return principles;\n    });\n  };\n\n  //===send post to server===\\\\\n  this.sendPost = function (p) {\n    console.log(p);\n    imageExtensionB = p.before.imageData.split(';')[0].split('/');\n    imageExtensionB = imageExtensionB[imageExtensionB.length - 1];\n    imageExtensionA = p.after.imageData.split(';')[0].split('/');\n    imageExtensionA = imageExtensionA[imageExtensionA.length - 1];\n\n    p.before = {\n      imageBody: p.before.imageData,\n      imageName: p.before.filename,\n      imageExtension: imageExtensionB,\n      userEmail: 'brennonschow@gmail.com'\n    };\n    p.after = {\n      imageBody: p.after.imageData,\n      imageName: p.after.filename,\n      imageExtension: imageExtensionA,\n      userEmail: 'brennonschow@gmail.com'\n    };\n\n    return $http.post('/api/upload', p).then(function (r) {\n      console.log(r);\n    });\n  };\n});\n'use strict';\n\nangular.module('DesignDoc', ['ui.router']).config(function ($urlRouterProvider, $stateProvider) {\n  $urlRouterProvider.otherwise('/');\n\n  $stateProvider.state('home', {\n    url: '/',\n    templateUrl: './views/home.html',\n    controller: 'navCtrl'\n  }).state('cases', {\n    url: '/cases/:type',\n    templateUrl: './views/cases.html',\n    controller: 'caseCtrl'\n  }).state('admin', {\n    url: '/admin',\n    templateUrl: './views/admin.html',\n    controller: 'adminCtrl'\n  });\n}).directive('bgUpload', function (adminService) {\n  return {\n    restrict: 'A',\n    contoller: 'adminCtrl',\n    link: function link(scope, elem, attrs) {\n      elem.bind('change', function (changeEvent) {\n        var reader = new FileReader();\n        reader.onload = function (loadEvent) {\n          var fileread = loadEvent.target.result,\n              name = elem[0].files[0].name;\n          if (attrs.ngModel === 'params.before') {\n            scope.params.before = {\n              imageData: fileread,\n              filename: name\n            };\n          } else if (attrs.ngModel === 'params.after') {\n            scope.params.after = {\n              imageData: fileread,\n              filename: name\n            };\n          }\n        };\n        reader.readAsDataURL(changeEvent.target.files[0]);\n      });\n    }\n  };\n});\n'use strict';\n\nangular.module('DesignDoc').controller('caseCtrl', function ($scope, caseService, $state) {\n  $('nav').css('display', 'flex');\n  $('nav').css('display', 'flex');\n\n  //===change small-opt colors===\\\\\n  var red = '#ff4338',\n      lightGrey = '#cccccc';\n  $scope.changeColor = function (type) {\n    if (!type) {\n      return;\n    } else {\n      switch (type) {\n        case 'UserExperience':\n          $('.small-opt').css('fill', lightGrey);\n          $('.ux').css('fill', red);\n          break;\n\n        case 'UserInterface':\n          $('.small-opt').css('fill', lightGrey);\n          $('.ui').css('fill', red);\n          break;\n\n        case 'HighProfile':\n          $('.small-opt').css('fill', lightGrey);\n          $('.hp').css('fill', red);\n          break;\n\n        default:\n          $('small-opt').css('fill', lightGrey);\n      }\n    }\n  };\n  $scope.changeColor($state.params.type);\n\n  //===display cases===\\\\\n  $scope.getCases = function (type) {\n    caseService.getCases().then(function (r) {\n      $scope.cases = [];\n      switch (type) {\n        case 'UserInterface':\n          $scope.cases = r.data.filter(function (x) {\n            return x.specialty === 'User Interface';\n          });\n          break;\n\n        case 'UserExperience':\n          $scope.cases = r.data.filter(function (x) {\n            return x.specialty === 'User Experience';\n          });\n          break;\n\n        case 'HighProfile':\n          $scope.cases = r.data.filter(function (x) {\n            return x.specialty === 'High Profile';\n          });\n          break;\n      }\n    });\n  };\n  $scope.getCases($state.params.type);\n\n  //===set single case===\\\\\n  $scope.setSingle = function (id) {\n    $scope.principles = [];\n    caseService.getSingle(id).then(function (r) {\n      $scope.single = r.data;\n      $scope.single.principles.forEach(function (p, i) {\n        $scope.single.principles[i].principle = p.principle.slice(0, 1).toUpperCase() + p.principle.slice(1);\n      });\n    });\n  };\n  $scope.section = 'case';\n});\n\"use strict\";\n\nangular.module(\"DesignDoc\").service(\"caseService\", function ($http) {\n\n  //===display cases===\\\\\n  this.getCases = function (type) {\n    return $http.get(\"/api/cases\");\n  };\n\n  //===get single case===\\\\\n  this.getSingle = function (id) {\n    return $http.get(\"/api/single?id=\" + id);\n  };\n});\n\"use strict\";\n\nangular.module(\"DesignDoc\").controller(\"navCtrl\", function ($scope, $stateParams, $state) {\n  $(\"nav\").css(\"dislay\", \"flex\");\n  $(\"footer\").css(\"display\", \"flex\");\n  //===manipulation of navbar===\\\\\n  $(\".opt\").on(\"click\", function (e) {\n    $(\"#logo\").css(\"height\", \"55%\").css(\"width\", \"auto\");\n    $(\"#pic\").css(\"width\", \"auto\").css(\"height\", \"100%\").attr(\"src\", \"./img/logo_D.png\");\n    $(\"#opt-nav\").css(\"display\", \"flex\");\n  });\n  $(\"#logo\").on(\"click\", function (e) {\n    $(\"#logo\").css(\"width\", \"250px\").css(\"height\", \"auto\");\n    $(\"#pic\").css(\"width\", \"100%\").css(\"height\", \"auto\").attr(\"src\", \"./img/logo_full.svg\");\n    $(\"#opt-nav\").css(\"display\", \"none\");\n  });\n});","angular.module(`DesignDoc`).controller(`adminCtrl`,function($scope,$state,adminService){\n  $scope.params={};\n  //display principles\n  $scope.getPrinciples=()=>{\n    adminService.getPrinciples().then((r)=>{\n      $scope.principles=r;\n    })\n  }\n  $scope.getPrinciples();\n\n  //hide/show nav/footer\n  $(`nav`).css(`display`,`none`);\n  $(`footer`).css(`display`,`none`);\n\n  //encode photos to base64\n  $scope.sendPost=(params)=>{\n    adminService.sendPost(params);\n  }\n\n  console.log($scope.params.before);\n});\n","angular.module(`DesignDoc`).service(`adminService`,function($http){\n\n  //===display principles===\\\\\n  this.getPrinciples=()=>{\n    return $http.get(`/api/principles`).then((r)=>{\n      let objects=[...r.data]\n      let principles=[]\n      objects.map((x)=>{\n        principles.push(x.name)\n      })\n      return principles\n    })\n  }\n\n  //===send post to server===\\\\\n  this.sendPost=(p)=>{\n    console.log(p);\n    imageExtensionB = p.before.imageData.split(';')[0].split('/')\n    imageExtensionB = imageExtensionB[imageExtensionB.length - 1];\n    imageExtensionA = p.after.imageData.split(';')[0].split('/')\n    imageExtensionA = imageExtensionA[imageExtensionA.length - 1];\n\n    p.before={\n      imageBody: p.before.imageData,\n      imageName: p.before.filename,\n      imageExtension: imageExtensionB,\n      userEmail: `brennonschow@gmail.com`\n    };\n    p.after={\n      imageBody: p.after.imageData,\n      imageName: p.after.filename,\n      imageExtension: imageExtensionA,\n      userEmail: `brennonschow@gmail.com`\n    }\n\n    return $http.post(`/api/upload`,p).then((r) =>{\n      console.log(r);\n    });\n  }\n});\n","angular.module(`DesignDoc`,[`ui.router`]).config(function($urlRouterProvider, $stateProvider){\n  $urlRouterProvider.otherwise(`/`);\n\n  $stateProvider.state(`home`,{\n    url: `/`,\n    templateUrl: `./views/home.html`,\n    controller: `navCtrl`\n  }).state(`cases`,{\n    url: `/cases/:type`,\n    templateUrl: `./views/cases.html`,\n    controller: `caseCtrl`\n  }).state(`admin`,{\n    url:`/admin`,\n    templateUrl: `./views/admin.html`,\n    controller: `adminCtrl`\n  })\n\n}).directive(`bgUpload`,function(adminService){\n  return {\n    restrict: `A`,\n    contoller: 'adminCtrl',\n    link: (scope,elem,attrs)=>{\n      elem.bind(`change`,(changeEvent)=>{\n        let reader=new FileReader();\n        reader.onload=(loadEvent)=>{\n          let fileread=loadEvent.target.result,\n              name=elem[0].files[0].name;\n          if(attrs.ngModel===`params.before`){\n            scope.params.before={\n                imageData: fileread,\n              filename: name\n            };\n          }\n          else if(attrs.ngModel===`params.after`){\n            scope.params.after={\n                imageData: fileread,\n              filename: name\n            };\n          }\n        }\n        reader.readAsDataURL(changeEvent.target.files[0])\n      })\n    }\n  }\n})\n","angular.module(`DesignDoc`).controller(`caseCtrl`, function($scope, caseService, $state){\n  $(`nav`).css(`display`,`flex`);\n  $(`nav`).css(`display`,`flex`);\n\n  //===change small-opt colors===\\\\\n  const red=`#ff4338`,\n        lightGrey=`#cccccc`;\n  $scope.changeColor=(type)=>{\n    if(!type){\n      return;\n    }\n    else{\n      switch (type){\n        case 'UserExperience':\n          $(`.small-opt`).css(`fill`,lightGrey);\n          $(`.ux`).css(`fill`,red);\n          break;\n\n        case 'UserInterface':\n          $(`.small-opt`).css(`fill`,lightGrey);\n          $(`.ui`).css(`fill`,red);\n          break;\n\n        case 'HighProfile':\n          $(`.small-opt`).css(`fill`,lightGrey);\n          $(`.hp`).css(`fill`,red);\n          break;\n\n        default:\n          $(`small-opt`).css(`fill`,lightGrey);\n      }\n    }\n  }\n  $scope.changeColor($state.params.type)\n\n\n//===display cases===\\\\\n  $scope.getCases=(type)=>{\n    caseService.getCases().then((r)=>{\n      $scope.cases=[];\n      switch(type){\n        case `UserInterface`:\n          $scope.cases=r.data.filter((x)=>{\n            return x.specialty===`User Interface`;\n          });\n          break;\n\n        case `UserExperience`:\n          $scope.cases=r.data.filter((x)=>{\n            return x.specialty===`User Experience`;\n          });\n          break;\n\n        case `HighProfile`:\n          $scope.cases=r.data.filter((x)=>{\n            return x.specialty===`High Profile`\n          })\n          break;\n      }\n    })\n  }\n  $scope.getCases($state.params.type);\n\n  //===set single case===\\\\\n  $scope.setSingle=(id)=>{\n    $scope.principles=[]\n    caseService.getSingle(id).then((r)=>{\n      $scope.single=r.data\n      $scope.single.principles.forEach((p, i)=>{\n        $scope.single.principles[i].principle=p.principle.slice(0,1).toUpperCase()+p.principle.slice(1)\n      })\n    })\n  }\n  $scope.section='case'\n});\n","angular.module(`DesignDoc`).service(`caseService`,function($http){\n\n  //===display cases===\\\\\n  this.getCases=(type)=>{\n    return $http.get(`/api/cases`)\n  }\n\n  //===get single case===\\\\\n  this.getSingle=(id)=>{\n    return $http.get(`/api/single?id=${id}`)\n  }\n})\n","angular.module(`DesignDoc`).controller(`navCtrl`,function($scope,$stateParams,$state){\n  $(`nav`).css(`dislay`,`flex`);\n  $(`footer`).css(`display`,`flex`);\n  //===manipulation of navbar===\\\\\n    $(`.opt`).on(`click`, (e)=>{\n      $(`#logo`).css(`height`,`55%`).css(`width`,`auto`);\n      $(`#pic`).css(`width`,`auto`).css(`height`,`100%`).attr(`src`,`./img/logo_D.png`);\n      $(`#opt-nav`).css(`display`,`flex`);\n    });\n    $(`#logo`).on(`click`, (e)=>{\n      $(`#logo`).css(`width`,`250px`).css(`height`,`auto`);\n      $(`#pic`).css(`width`,`100%`).css(`height`,`auto`).attr(`src`,`./img/logo_full.svg`);\n      $(`#opt-nav`).css(`display`,`none`);\n    });\n\n});\n"]}